{"version":3,"file":"react-hooks.umd.cjs","sources":["../src/utils/findElement.ts","../src/useClickOutOfArea/index.ts","../src/useDragScroll/index.ts"],"sourcesContent":["export default function findElement<T extends HTMLElement>(target: Target<T>) {\n    if (typeof target !== \"object\") {\n        return document.querySelector<T>(target);\n    }\n\n    if (Object.hasOwn(target, \"nodeName\")) {\n        return target as T;\n    }\n\n    if (Object.hasOwn(target, \"current\")) {\n        return (target as React.RefObject<T>).current;\n    }\n\n    return null;\n}\n","import { useEffect } from \"react\";\nimport findElement from \"../utils/findElement\";\n\n/**\n * @category react-hooks\n * @description 타겟을 제외한 다른 영역의 클릭 이벤트를 발생시킬 때 사용합니다.\n * @param target 타겟을 지정하기 위한 값\n * @param callback 타겟을 제외한 영역을 클릭할 때 발생시키는 callback 함수\n *\n * ```tsx\n * import { useClickOutOfArea } from \"@ethan-heo/react-hooks\"\n *\n * function TestComponent({ onClick }: { onClick: () => void }) {\n *      const ref = useRef<HTMLButtonElement>(null);\n *      useClickOutOfArea(ref, onClick);\n *\n *      return (\n *          <>\n *              outer\n *              <button ref={ref}>\n *                  <span>inner</span>\n *              </button>\n *          </>\n *      );\n *  }\n * ```\n */\nexport default function useClickOutOfArea<T extends HTMLElement>(\n    target: Target<T>,\n    callback: () => void\n) {\n    useEffect(() => {\n        const targetEl = findElement(target);\n\n        if (!targetEl) throw TypeError(`Not found target`, { cause: target });\n\n        document.addEventListener(\"click\", handleDocumentClick);\n\n        return () => {\n            document.removeEventListener(\"click\", handleDocumentClick);\n        };\n\n        function handleDocumentClick(ev: MouseEvent) {\n            const _target = ev.target as HTMLElement;\n\n            if (!targetEl?.contains(_target)) {\n                callback();\n            }\n        }\n    }, []);\n}\n","import { useEffect, useRef } from \"react\";\nimport findElement from \"../utils/findElement\";\n\ntype MoveToScrollOptions = {\n    boundary: number;\n};\n\nconst defaultOptions: MoveToScrollOptions = {\n    boundary: 40,\n};\n\nfunction useDragScroll<T extends HTMLElement>(\n    target: React.RefObject<T> | HTMLElement | string,\n    options: MoveToScrollOptions = defaultOptions\n) {\n    const state = useRef({\n        isActive: false,\n    });\n\n    useEffect(() => {\n        const _target = findElement(target);\n\n        if (!_target) return;\n\n        let intervId: number;\n\n        _target.addEventListener(\"mousedown\", activate);\n        _target.addEventListener(\"touchstart\", activate);\n        _target.addEventListener(\"mouseup\", inactivate);\n        _target.addEventListener(\"touchend\", inactivate);\n        _target.addEventListener(\"mousemove\", moveCursor);\n        _target.addEventListener(\"touchmove\", moveTouch);\n\n        return () => {\n            _target?.removeEventListener(\"mousedown\", activate);\n            _target?.removeEventListener(\"touchstart\", activate);\n            _target?.removeEventListener(\"mouseup\", inactivate);\n            _target?.removeEventListener(\"touchend\", inactivate);\n            _target?.removeEventListener(\"mousemove\", moveCursor);\n            _target?.removeEventListener(\"touchmove\", moveTouch);\n        };\n\n        function activate() {\n            state.current.isActive = true;\n        }\n        function inactivate() {\n            state.current.isActive = false;\n            window.clearInterval(intervId);\n        }\n\n        function moveCursor(e: MouseEvent) {\n            if (!state.current.isActive) return;\n\n            window.clearInterval(intervId);\n\n            const target = e.currentTarget as HTMLElement;\n            const position = getPosition(\n                target,\n                options.boundary,\n                getCoordinate(e)\n            );\n\n            if (position !== POSITION.CENTER) {\n                intervId = window.setInterval(() => {\n                    moveToScroll(target, position);\n                }, 10);\n            }\n        }\n\n        function moveTouch(e: TouchEvent) {\n            if (!state.current.isActive) return;\n\n            window.clearInterval(intervId);\n\n            const target = e.currentTarget as HTMLElement;\n            const position = getPosition(\n                target,\n                options.boundary,\n                getCoordinate(e)\n            );\n\n            if (e.cancelable && position !== POSITION.CENTER) {\n                e.preventDefault();\n            }\n\n            if (position !== POSITION.CENTER) {\n                intervId = window.setInterval(() => {\n                    /**\n                     * https://www.uriports.com/blog/easy-fix-for-intervention-ignored-attempt-to-cancel-a-touchmove-event-with-cancelable-false/\n                     */\n                    moveToScroll(target, position);\n                }, 10);\n            }\n        }\n    }, [options]);\n}\n\nexport default useDragScroll;\n\nfunction getCoordinate(e: MouseEvent | TouchEvent): [number, number] {\n    const { left, top } = getBoundingClientRect(e.currentTarget as HTMLElement);\n\n    if (\"clientX\" in e) {\n        return [e.clientX - left, e.clientY - top];\n    } else {\n        return [\n            e.changedTouches[0].clientX - left,\n            e.changedTouches[0].clientY - top,\n        ];\n    }\n}\n\nfunction getBoundingClientRect(el: HTMLElement) {\n    if (el === document.body) {\n        return {\n            left: 0,\n            top: 0,\n        };\n    } else {\n        return el.getBoundingClientRect();\n    }\n}\n\nconst POSITION = {\n    LEFT: 0,\n    RIGHT: 1,\n    TOP: 2,\n    BOTTOM: 3,\n    CENTER: 4,\n};\n\nfunction getPosition(\n    target: HTMLElement,\n    boundary: number,\n    pos: [number, number]\n) {\n    const { width, height } = target.getBoundingClientRect();\n    const [posX, posY] = pos;\n\n    if (posX >= 0 && posX <= boundary) {\n        return POSITION.LEFT;\n    }\n\n    if (posX >= width - boundary && posX <= width) {\n        return POSITION.RIGHT;\n    }\n\n    if (posY >= 0 && posY <= boundary) {\n        return POSITION.TOP;\n    }\n\n    if (posY >= height - boundary && posY <= height) {\n        return POSITION.BOTTOM;\n    }\n\n    return POSITION.CENTER;\n}\n\nfunction moveToScroll(el: HTMLElement, position: number) {\n    switch (position) {\n        case POSITION.TOP:\n            el.scrollTo({\n                top: el.scrollTop - 5,\n            });\n            break;\n        case POSITION.BOTTOM:\n            el.scrollTo({\n                top: el.scrollTop + 5,\n            });\n            break;\n        case POSITION.LEFT:\n            el.scrollTo({\n                left: el.scrollLeft - 5,\n            });\n            break;\n        case POSITION.RIGHT:\n            el.scrollTo({\n                left: el.scrollLeft + 5,\n            });\n            break;\n        default:\n    }\n}\n"],"names":["findElement","target","useClickOutOfArea","callback","useEffect","targetEl","handleDocumentClick","ev","_target","defaultOptions","useDragScroll","options","state","useRef","intervId","activate","inactivate","moveCursor","moveTouch","e","position","getPosition","getCoordinate","POSITION","moveToScroll","left","top","getBoundingClientRect","el","boundary","pos","width","height","posX","posY"],"mappings":"yQAAA,SAAwBA,EAAmCC,EAAmB,CACtE,OAAA,OAAOA,GAAW,SACX,SAAS,cAAiBA,CAAM,EAGvC,OAAO,OAAOA,EAAQ,UAAU,EACzBA,EAGP,OAAO,OAAOA,EAAQ,SAAS,EACvBA,EAA8B,QAGnC,IACX,CCawB,SAAAC,EACpBD,EACAE,EACF,CACEC,EAAAA,UAAU,IAAM,CACN,MAAAC,EAAWL,EAAYC,CAAM,EAEnC,GAAI,CAACI,EAAU,MAAM,UAAU,mBAAoB,CAAE,MAAOJ,EAAQ,EAE3D,gBAAA,iBAAiB,QAASK,CAAmB,EAE/C,IAAM,CACA,SAAA,oBAAoB,QAASA,CAAmB,CAAA,EAG7D,SAASA,EAAoBC,EAAgB,CACzC,MAAMC,EAAUD,EAAG,OAEdF,GAAA,MAAAA,EAAU,SAASG,IACXL,GAEjB,CACJ,EAAG,CAAE,CAAA,CACT,CC3CA,MAAMM,EAAsC,CACxC,SAAU,EACd,EAEA,SAASC,EACLT,EACAU,EAA+BF,EACjC,CACE,MAAMG,EAAQC,EAAAA,OAAO,CACjB,SAAU,EAAA,CACb,EAEDT,EAAAA,UAAU,IAAM,CACN,MAAAI,EAAUR,EAAYC,CAAM,EAElC,GAAI,CAACO,EAAS,OAEV,IAAAM,EAEI,OAAAN,EAAA,iBAAiB,YAAaO,CAAQ,EACtCP,EAAA,iBAAiB,aAAcO,CAAQ,EACvCP,EAAA,iBAAiB,UAAWQ,CAAU,EACtCR,EAAA,iBAAiB,WAAYQ,CAAU,EACvCR,EAAA,iBAAiB,YAAaS,CAAU,EACxCT,EAAA,iBAAiB,YAAaU,CAAS,EAExC,IAAM,CACAV,GAAA,MAAAA,EAAA,oBAAoB,YAAaO,GACjCP,GAAA,MAAAA,EAAA,oBAAoB,aAAcO,GAClCP,GAAA,MAAAA,EAAA,oBAAoB,UAAWQ,GAC/BR,GAAA,MAAAA,EAAA,oBAAoB,WAAYQ,GAChCR,GAAA,MAAAA,EAAA,oBAAoB,YAAaS,GACjCT,GAAA,MAAAA,EAAA,oBAAoB,YAAaU,EAAS,EAGvD,SAASH,GAAW,CAChBH,EAAM,QAAQ,SAAW,EAC7B,CACA,SAASI,GAAa,CAClBJ,EAAM,QAAQ,SAAW,GACzB,OAAO,cAAcE,CAAQ,CACjC,CAEA,SAASG,EAAWE,EAAe,CAC3B,GAAA,CAACP,EAAM,QAAQ,SAAU,OAE7B,OAAO,cAAcE,CAAQ,EAE7B,MAAMb,EAASkB,EAAE,cACXC,EAAWC,EACbpB,EACAU,EAAQ,SACRW,EAAcH,CAAC,CAAA,EAGfC,IAAaG,EAAS,SACXT,EAAA,OAAO,YAAY,IAAM,CAChCU,EAAavB,EAAQmB,CAAQ,GAC9B,EAAE,EAEb,CAEA,SAASF,EAAUC,EAAe,CAC1B,GAAA,CAACP,EAAM,QAAQ,SAAU,OAE7B,OAAO,cAAcE,CAAQ,EAE7B,MAAMb,EAASkB,EAAE,cACXC,EAAWC,EACbpB,EACAU,EAAQ,SACRW,EAAcH,CAAC,CAAA,EAGfA,EAAE,YAAcC,IAAaG,EAAS,QACtCJ,EAAE,eAAe,EAGjBC,IAAaG,EAAS,SACXT,EAAA,OAAO,YAAY,IAAM,CAIhCU,EAAavB,EAAQmB,CAAQ,GAC9B,EAAE,EAEb,CAAA,EACD,CAACT,CAAO,CAAC,CAChB,CAIA,SAASW,EAAc,EAA8C,CACjE,KAAM,CAAE,KAAAG,EAAM,IAAAC,CAAA,EAAQC,EAAsB,EAAE,aAA4B,EAE1E,MAAI,YAAa,EACN,CAAC,EAAE,QAAUF,EAAM,EAAE,QAAUC,CAAG,EAElC,CACH,EAAE,eAAe,CAAC,EAAE,QAAUD,EAC9B,EAAE,eAAe,CAAC,EAAE,QAAUC,CAAA,CAG1C,CAEA,SAASC,EAAsBC,EAAiB,CACxC,OAAAA,IAAO,SAAS,KACT,CACH,KAAM,EACN,IAAK,CAAA,EAGFA,EAAG,uBAElB,CAEA,MAAML,EAAW,CACb,KAAM,EACN,MAAO,EACP,IAAK,EACL,OAAQ,EACR,OAAQ,CACZ,EAEA,SAASF,EACLpB,EACA4B,EACAC,EACF,CACE,KAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAI/B,EAAO,sBAAsB,EACjD,CAACgC,EAAMC,CAAI,EAAIJ,EAEjB,OAAAG,GAAQ,GAAKA,GAAQJ,EACdN,EAAS,KAGhBU,GAAQF,EAAQF,GAAYI,GAAQF,EAC7BR,EAAS,MAGhBW,GAAQ,GAAKA,GAAQL,EACdN,EAAS,IAGhBW,GAAQF,EAASH,GAAYK,GAAQF,EAC9BT,EAAS,OAGbA,EAAS,MACpB,CAEA,SAASC,EAAaI,EAAiBR,EAAkB,CACrD,OAAQA,EAAU,CACd,KAAKG,EAAS,IACVK,EAAG,SAAS,CACR,IAAKA,EAAG,UAAY,CAAA,CACvB,EACD,MACJ,KAAKL,EAAS,OACVK,EAAG,SAAS,CACR,IAAKA,EAAG,UAAY,CAAA,CACvB,EACD,MACJ,KAAKL,EAAS,KACVK,EAAG,SAAS,CACR,KAAMA,EAAG,WAAa,CAAA,CACzB,EACD,MACJ,KAAKL,EAAS,MACVK,EAAG,SAAS,CACR,KAAMA,EAAG,WAAa,CAAA,CACzB,EACD,KAER,CACJ"}