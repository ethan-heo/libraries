{"version":3,"file":"react-hooks.umd.cjs","sources":["../src/utils/findElement.ts","../src/useClickOutOfArea/index.ts"],"sourcesContent":["export default function findElement<T extends HTMLElement>(\n    target: React.RefObject<T> | HTMLElement | string\n) {\n    if (typeof target !== \"object\") {\n        return document.querySelector<T>(target);\n    }\n\n    if (Object.hasOwn(target, \"nodeName\")) {\n        return target as T;\n    }\n\n    if (Object.hasOwn(target, \"current\")) {\n        return (target as React.RefObject<T>).current;\n    }\n\n    return null;\n}\n","import { useEffect } from \"react\";\nimport findElement from \"../utils/findElement\";\n\nexport default function useClickOutOfArea<T extends HTMLElement>(\n    target: React.RefObject<T> | HTMLElement | string,\n    callback: () => void\n) {\n    useEffect(() => {\n        const targetEl = findElement(target);\n\n        if (!targetEl) throw TypeError(`Not found target`, { cause: target });\n\n        document.addEventListener(\"click\", handleDocumentClick);\n\n        return () => {\n            document.removeEventListener(\"click\", handleDocumentClick);\n        };\n\n        function handleDocumentClick(ev: MouseEvent) {\n            const _target = ev.target as HTMLElement;\n\n            if (!targetEl?.contains(_target)) {\n                callback();\n            }\n        }\n    }, []);\n}\n"],"names":["findElement","target","useClickOutOfArea","callback","useEffect","targetEl","handleDocumentClick","ev","_target"],"mappings":"yQAAA,SAAwBA,EACpBC,EACF,CACM,OAAA,OAAOA,GAAW,SACX,SAAS,cAAiBA,CAAM,EAGvC,OAAO,OAAOA,EAAQ,UAAU,EACzBA,EAGP,OAAO,OAAOA,EAAQ,SAAS,EACvBA,EAA8B,QAGnC,IACX,CCbwB,SAAAC,EACpBD,EACAE,EACF,CACEC,EAAAA,UAAU,IAAM,CACN,MAAAC,EAAWL,EAAYC,CAAM,EAEnC,GAAI,CAACI,EAAU,MAAM,UAAU,mBAAoB,CAAE,MAAOJ,EAAQ,EAE3D,gBAAA,iBAAiB,QAASK,CAAmB,EAE/C,IAAM,CACA,SAAA,oBAAoB,QAASA,CAAmB,CAAA,EAG7D,SAASA,EAAoBC,EAAgB,CACzC,MAAMC,EAAUD,EAAG,OAEdF,GAAA,MAAAA,EAAU,SAASG,IACXL,GAEjB,CACJ,EAAG,CAAE,CAAA,CACT"}