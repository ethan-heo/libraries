{"version":3,"file":"react-hooks.js","sources":["../src/utils/findElement.ts","../src/useClickOutOfArea/index.ts"],"sourcesContent":["export default function findElement<T extends HTMLElement>(\n    target: React.RefObject<T> | HTMLElement | string\n) {\n    if (typeof target !== \"object\") {\n        return document.querySelector<T>(target);\n    }\n\n    if (Object.hasOwn(target, \"nodeName\")) {\n        return target as T;\n    }\n\n    if (Object.hasOwn(target, \"current\")) {\n        return (target as React.RefObject<T>).current;\n    }\n\n    return null;\n}\n","import { useEffect } from \"react\";\nimport findElement from \"../utils/findElement\";\n\nexport default function useClickOutOfArea<T extends HTMLElement>(\n    target: React.RefObject<T> | HTMLElement | string,\n    callback: () => void\n) {\n    useEffect(() => {\n        const targetEl = findElement(target);\n\n        if (!targetEl) throw TypeError(`Not found target`, { cause: target });\n\n        document.addEventListener(\"click\", handleDocumentClick);\n\n        return () => {\n            document.removeEventListener(\"click\", handleDocumentClick);\n        };\n\n        function handleDocumentClick(ev: MouseEvent) {\n            const _target = ev.target as HTMLElement;\n\n            if (!targetEl?.contains(_target)) {\n                callback();\n            }\n        }\n    }, []);\n}\n"],"names":["findElement","target","useClickOutOfArea","callback","useEffect","targetEl","handleDocumentClick","ev","_target"],"mappings":";AAAA,SAAwBA,EACpBC,GACF;AACM,SAAA,OAAOA,KAAW,WACX,SAAS,cAAiBA,CAAM,IAGvC,OAAO,OAAOA,GAAQ,UAAU,IACzBA,IAGP,OAAO,OAAOA,GAAQ,SAAS,IACvBA,EAA8B,UAGnC;AACX;ACbwB,SAAAC,EACpBD,GACAE,GACF;AACE,EAAAC,EAAU,MAAM;AACN,UAAAC,IAAWL,EAAYC,CAAM;AAEnC,QAAI,CAACI;AAAU,YAAM,UAAU,oBAAoB,EAAE,OAAOJ,GAAQ;AAE3D,oBAAA,iBAAiB,SAASK,CAAmB,GAE/C,MAAM;AACA,eAAA,oBAAoB,SAASA,CAAmB;AAAA,IAAA;AAG7D,aAASA,EAAoBC,GAAgB;AACzC,YAAMC,IAAUD,EAAG;AAEnB,MAAKF,KAAA,QAAAA,EAAU,SAASG,MACXL;IAEjB;AAAA,EACJ,GAAG,CAAE,CAAA;AACT;"}